<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="317.5mm"
   height="178.59375mm"
   viewBox="0 0 317.5 178.59375"
   version="1.1"
   id="svg5"
   xml:space="preserve"
   sodipodi:docname="social_card.svg"
   inkscape:version="1.2 (dc2aeda, 2022-05-15)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview7"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="mm"
     showgrid="false"
     inkscape:zoom="0.50429843"
     inkscape:cx="515.56774"
     inkscape:cy="520.52512"
     inkscape:window-width="1957"
     inkscape:window-height="1123"
     inkscape:window-x="1308"
     inkscape:window-y="216"
     inkscape:window-maximized="0"
     inkscape:current-layer="layer1" /><defs
     id="defs2"><clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath1881"><path
         d="M 0,595.276 H 841.89 V 0 H 0 Z"
         id="path1879" /></clipPath><meshgradient
       inkscape:collect="always"
       id="meshgradient8194"
       gradientUnits="userSpaceOnUse"
       x="-17.620609"
       y="136.57359"><meshrow
         id="meshrow8196"><meshpatch
           id="meshpatch8198"><stop
             path="c 94.9716,0  189.943,0  284.915,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop8200" /><stop
             path="c 0,22.765  0,45.5301  0,68.2951"
             style="stop-color:#000000;stop-opacity:1"
             id="stop8202" /><stop
             path="c -94.9716,0  -189.943,0  -284.915,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop8204" /><stop
             path="c 0,-22.765  0,-45.5301  0,-68.2951"
             style="stop-color:#000000;stop-opacity:1"
             id="stop8206" /></meshpatch></meshrow></meshgradient></defs><g
     inkscape:label="Layer 1"
     inkscape:groupmode="layer"
     id="layer1"
     transform="translate(39.194916,-112.05906)"><rect
       style="fill:#ececec;stroke:#ffffff;stroke-width:0;stroke-linejoin:round;stroke-miterlimit:5.1;paint-order:markers fill stroke"
       id="rect10443"
       width="317.41702"
       height="177.33382"
       x="-38.670261"
       y="113.10838" /><g
       id="g1480"
       transform="matrix(0.60470473,0,0,0.60470473,40.020348,154.44493)"><g
         id="g1973"
         transform="translate(-241.35405,33.101252)"><g
           id="g1869"
           transform="matrix(0.35277776,0,0,-0.35277778,467.0781,113.61801)"><path
             d="M 0,0 -11.403,27.535 -22.809,0 Z m 5.241,-12.638 h -33.392 l -6.37,-15.411 h -17.054 l 32.054,71.92 h 16.44 l 32.158,-71.92 H 11.61 Z"
             style="fill:#727272;fill-opacity:1;fill-rule:nonzero;stroke:none"
             id="path1871" /></g><path
           d="m 479.98098,98.141371 h 5.87199 v 25.371779 h -5.87199 z"
           style="fill:#727272;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0.352778"
           id="path1873" /><g
           id="g1875"
           transform="matrix(0.35277776,0,0,-0.35277778,220,210.00015)"><g
             id="g1877"
             clip-path="url(#clipPath1881)"><g
               id="g1883"
               transform="translate(214.5947,315.511)"><path
                 d="m 0,0 0.063,-43.719 c 0.003,-2.86 0.008,-7.18 -2.368,-9.566 -1.652,-1.666 -4.337,-2.498 -7.978,-2.503 l -11.669,-0.013 c -1.958,-0.002 -5.242,-0.006 -7.603,2.331 -1.951,1.947 -2.946,5.208 -2.952,9.682 l -0.05,43.751 -14.584,-0.016 0.05,-43.963 c 0.005,-4.389 1.071,-26.273 21.709,-26.25 l 19.219,0.022 c 7.81,0.01 20.919,3.442 20.893,26.299 L 14.68,0.017 Z"
                 style="fill:#a42644;fill-opacity:1;fill-rule:nonzero;stroke:none"
                 id="path1885" /></g><g
               id="g1887"
               transform="translate(133.3916,289.7238)"><path
                 d="m 0,0 -15.933,1.979 c -3.843,0.626 -7.25,1.512 -7.254,5.602 -0.007,6.462 1.846,8.214 14.876,8.229 l 3.257,0.004 C 2.613,15.44 9.732,14.76 18.451,12.372 l 1.059,-0.293 -0.011,10.06 -0.096,0.174 c -1.311,2.582 -13.292,6.683 -25.007,6.669 l -3.24,-0.003 C -28.61,28.956 -38.21,21.613 -38.193,6.525 c 0.016,-14.485 12.176,-17.593 23.571,-19.361 l 7.084,-0.989 c 5.175,-0.652 8.174,-1.067 10.004,-1.801 3.067,-1.231 4.768,-2.27 4.709,-7.104 -0.099,-8.031 -5.445,-8.906 -17.027,-8.918 l -3.25,-0.004 c -6.815,-0.008 -15.078,1.913 -23.897,5.554 l -1.158,0.49 0.011,-9.847 c 0.005,-3.996 12.051,-9.039 25.585,-9.024 l 2.975,0.004 c 22.074,0.025 32.342,7.468 32.324,23.44 C 22.72,-5.583 11.233,-1.73 0,0"
                 style="fill:#a42644;fill-opacity:1;fill-rule:nonzero;stroke:none"
                 id="path1889" /></g><g
               id="g1891"
               transform="translate(279.2861,318.7971)"><path
                 d="m 0,0 -2.145,-0.002 c -26.679,-0.031 -36.585,-10.08 -36.554,-37.093 l 0.04,-36.457 15.578,0.018 -0.04,36.4 c -0.023,20.487 4.554,23.944 18.303,23.96 l 3.497,0.004 c 13.257,0.015 15.699,-3.846 15.699,-13.305 0,-5.85 -1.904,-12.606 -7.314,-12.612 l -24.548,0.421 0.011,-10.707 0.701,-0.112 c 4.939,-0.82 13.682,-1.424 20.336,-1.424 22.931,0 26.666,12.6 26.655,23.147 C 30.199,-10.357 18.899,0.021 0,0"
                 style="fill:#a42644;fill-opacity:1;fill-rule:nonzero;stroke:none"
                 id="path1893" /></g><g
               id="g1895"
               transform="translate(361.9351,317.9055)"><path
                 d="m 0,0 c -4.048,0.641 -13.515,0.98 -18.318,0.975 -8.549,-0.01 -22.876,-3.495 -22.85,-26.759 l 0.052,-46.876 15.271,0.017 -0.051,45.874 c -0.014,12.348 2.237,13.612 11.894,13.623 L 0,-13.13 Z"
                 style="fill:#a42644;fill-opacity:1;fill-rule:nonzero;stroke:none"
                 id="path1897" /></g><g
               id="g1899"
               transform="translate(409.1309,258.7092)"><path
                 d="m 0,0 -2.98,-0.003 c -12.95,-0.015 -20.811,1.517 -20.834,22.919 -0.024,20.432 4.566,23.887 18.379,23.903 l 3.491,0.004 c 12.905,0.014 15.693,-2.09 15.704,-11.86 0.006,-4.872 -2.177,-6.956 -7.311,-6.962 l -24.566,-0.028 0.012,-10.229 0.695,-0.117 c 4.875,-0.833 13.637,-1.444 20.375,-1.437 9.952,0.011 26.621,1.921 26.621,21.019 0,19.575 -16.425,22.8 -30.182,22.784 L -2.762,59.991 C -29.488,59.96 -39.42,49.912 -39.389,22.898 c 0.029,-25.851 10.191,-36.39 35.084,-36.362 l 1.892,0.002 c 15.767,0.019 29.097,4.184 29.091,9.086 L 26.669,4.147 25.617,3.863 C 16.453,1.425 9.326,0.011 0,0"
                 style="fill:#a42644;fill-opacity:1;fill-rule:nonzero;stroke:none"
                 id="path1901" /></g><g
               id="g1903"
               transform="translate(541.7461,291.6574)"><path
                 d="m 0,0 c -0.015,12.703 -4.809,19.224 -9.979,22.571 l 0.011,10e-4 c 0,0 -5.616,4.226 -15.62,4.226 -4.87,0.03 -8.706,-0.672 -11.683,-1.63 -4.131,-1.15 -6.699,-3.155 -7.995,-4.427 -0.446,-0.428 -0.663,-0.701 -0.663,-0.701 0,0 -5.301,6.851 -20.342,6.758 -6.571,0 -11.234,-1.82 -13.67,-3.071 -0.086,-0.043 -0.168,-0.087 -0.253,-0.13 -0.136,-0.072 -0.255,-0.139 -0.375,-0.205 C -90.417,18.057 -91.711,5.92 -91.705,-0.104 l 0.052,-46.308 13.885,0.016 -0.05,46.308 c -0.008,6.979 1.422,13.438 11.867,13.45 10.818,0.013 12.939,-4.903 12.948,-13.422 l 0.052,-46.308 14.29,0.016 -0.051,46.308 c -0.011,9.265 3.796,13.58 11.971,13.589 8.841,0.01 12.793,-4.173 12.804,-13.561 l 0.051,-46.307 13.937,0.015 z"
                 style="fill:#a42644;fill-opacity:1;fill-rule:nonzero;stroke:none"
                 id="path1905" /></g><g
               id="g1907"
               transform="translate(582.707,305.2385)"><path
                 d="M 0,0 2.98,0.003 C 15.931,0.018 23.791,-1.514 23.815,-22.915 23.838,-43.348 19.248,-46.803 5.436,-46.818 l -3.492,-0.004 c -12.905,-0.015 -15.693,2.09 -15.704,11.859 -0.006,4.873 2.177,6.957 7.312,6.963 l 24.565,0.027 -0.012,10.229 -0.694,0.117 c -4.876,0.833 -13.637,1.444 -20.376,1.437 -9.951,-0.011 -26.621,-1.921 -26.621,-21.019 0,-19.575 16.426,-22.8 30.183,-22.784 l 2.166,0.003 C 29.488,-59.96 39.42,-49.911 39.39,-22.897 39.36,2.954 29.198,13.492 4.306,13.464 L 2.413,13.462 C -13.354,13.444 -26.684,9.279 -26.678,4.376 l 0.01,-8.523 1.052,0.284 C -16.452,-1.425 -9.325,-0.011 0,0"
                 style="fill:#a42644;fill-opacity:1;fill-rule:nonzero;stroke:none"
                 id="path1909" /></g></g></g></g><g
         aria-label="developers"
         id="text2029"
         style="font-weight:500;font-size:22.5778px;font-family:Montserrat;-inkscape-font-specification:'Montserrat Medium';text-align:end;text-anchor:end;fill:#727272;stroke:#ffffff;stroke-width:0;stroke-linejoin:round;stroke-miterlimit:5.1;paint-order:markers fill stroke"><path
           d="m 137.71433,182.57794 q -1.73849,0 -3.11574,-0.76764 -1.35467,-0.76765 -2.14489,-2.1449 -0.79022,-1.37724 -0.79022,-3.20604 0,-1.8288 0.79022,-3.18347 0.79022,-1.37725 2.14489,-2.14489 1.37725,-0.76765 3.11574,-0.76765 1.51271,0 2.73191,0.67733 1.2192,0.67734 1.94169,2.03201 0.74507,1.35467 0.74507,3.38667 0,2.032 -0.72249,3.38667 -0.69991,1.35467 -1.91911,2.05458 -1.21921,0.67733 -2.77707,0.67733 z m 0.18062,-1.89653 q 1.12889,0 2.032,-0.51929 0.92569,-0.51929 1.44498,-1.46756 0.54187,-0.97085 0.54187,-2.2352 0,-1.28694 -0.54187,-2.21263 -0.51929,-0.94826 -1.44498,-1.46755 -0.90311,-0.51929 -2.032,-0.51929 -1.15147,0 -2.05458,0.51929 -0.90311,0.51929 -1.44498,1.46755 -0.54187,0.92569 -0.54187,2.21263 0,1.26435 0.54187,2.2352 0.54187,0.94827 1.44498,1.46756 0.90311,0.51929 2.05458,0.51929 z m 4.08658,1.76106 v -3.22862 l 0.13547,-2.77707 -0.22578,-2.77707 v -7.96996 h 2.16747 v 16.75272 z"
           id="path2085" /><path
           d="m 153.49619,182.57794 q -1.91911,0 -3.38667,-0.79022 -1.44498,-0.79022 -2.25778,-2.16747 -0.79022,-1.37725 -0.79022,-3.16089 0,-1.78365 0.76764,-3.16089 0.79023,-1.37725 2.14489,-2.1449 1.37725,-0.79022 3.09316,-0.79022 1.73849,0 3.07058,0.76765 1.33209,0.76764 2.07716,2.16747 0.76765,1.37724 0.76765,3.22862 0,0.13547 -0.0226,0.31609 0,0.18062 -0.0226,0.33867 h -10.18259 v -1.55787 h 9.0537 l -0.88053,0.54187 q 0.0226,-1.15147 -0.47414,-2.05458 -0.49671,-0.90312 -1.37724,-1.39983 -0.85796,-0.51929 -2.00943,-0.51929 -1.12889,0 -2.00942,0.51929 -0.88054,0.49671 -1.37725,1.4224 -0.49671,0.90312 -0.49671,2.07716 v 0.36125 q 0,1.19662 0.54187,2.14489 0.56444,0.92569 1.55787,1.44498 0.99342,0.51929 2.28035,0.51929 1.06116,0 1.91912,-0.36125 0.88053,-0.36124 1.53529,-1.08373 l 1.19662,1.39982 q -0.8128,0.94827 -2.032,1.44498 -1.19663,0.49671 -2.68676,0.49671 z"
           id="path2087" /><path
           d="m 164.89796,182.44247 -5.23805,-11.96623 h 2.25778 l 4.65103,10.83734 h -1.08373 l 4.74133,-10.83734 h 2.12232 l -5.23805,11.96623 z"
           id="path2089" /><path
           d="m 179.37026,182.57794 q -1.91911,0 -3.38667,-0.79022 -1.44498,-0.79022 -2.25778,-2.16747 -0.79022,-1.37725 -0.79022,-3.16089 0,-1.78365 0.76764,-3.16089 0.79023,-1.37725 2.1449,-2.1449 1.37724,-0.79022 3.09315,-0.79022 1.73849,0 3.07058,0.76765 1.3321,0.76764 2.07716,2.16747 0.76765,1.37724 0.76765,3.22862 0,0.13547 -0.0226,0.31609 0,0.18062 -0.0226,0.33867 h -10.18259 v -1.55787 h 9.0537 l -0.88053,0.54187 q 0.0226,-1.15147 -0.47414,-2.05458 -0.49671,-0.90312 -1.37724,-1.39983 -0.85796,-0.51929 -2.00943,-0.51929 -1.12889,0 -2.00942,0.51929 -0.88053,0.49671 -1.37725,1.4224 -0.49671,0.90312 -0.49671,2.07716 v 0.36125 q 0,1.19662 0.54187,2.14489 0.56444,0.92569 1.55787,1.44498 0.99342,0.51929 2.28036,0.51929 1.06115,0 1.91911,-0.36125 0.88053,-0.36124 1.53529,-1.08373 l 1.19662,1.39982 q -0.8128,0.94827 -2.032,1.44498 -1.19662,0.49671 -2.68676,0.49671 z"
           id="path2091" /><path
           d="m 187.8595,182.44247 v -16.75272 h 2.16747 v 16.75272 z"
           id="path2093" /><path
           d="m 199.28386,182.57794 q -1.80623,0 -3.20605,-0.79022 -1.39982,-0.79022 -2.21263,-2.16747 -0.8128,-1.39982 -0.8128,-3.16089 0,-1.78365 0.8128,-3.16089 0.81281,-1.37725 2.21263,-2.1449 1.39982,-0.79022 3.20605,-0.79022 1.78364,0 3.18347,0.79022 1.4224,0.76765 2.21262,2.1449 0.8128,1.35466 0.8128,3.16089 0,1.78364 -0.8128,3.16089 -0.79022,1.37725 -2.21262,2.16747 -1.39983,0.79022 -3.18347,0.79022 z m 0,-1.89653 q 1.15146,0 2.05458,-0.51929 0.92569,-0.51929 1.44498,-1.46756 0.51929,-0.97085 0.51929,-2.2352 0,-1.28694 -0.51929,-2.21263 -0.51929,-0.94826 -1.44498,-1.46755 -0.90312,-0.51929 -2.05458,-0.51929 -1.15147,0 -2.05458,0.51929 -0.90312,0.51929 -1.44498,1.46755 -0.54187,0.92569 -0.54187,2.21263 0,1.26435 0.54187,2.2352 0.54186,0.94827 1.44498,1.46756 0.90311,0.51929 2.05458,0.51929 z"
           id="path2095" /><path
           d="m 214.83992,182.57794 q -1.49014,0 -2.73192,-0.67733 -1.2192,-0.69991 -1.96426,-2.05458 -0.72249,-1.35467 -0.72249,-3.38667 0,-2.032 0.69991,-3.38667 0.72249,-1.35467 1.94169,-2.03201 1.24178,-0.67733 2.77707,-0.67733 1.76107,0 3.11573,0.76765 1.35467,0.76764 2.1449,2.14489 0.79022,1.35467 0.79022,3.18347 0,1.8288 -0.79022,3.20604 -0.79023,1.37725 -2.1449,2.1449 -1.35466,0.76764 -3.11573,0.76764 z m -6.34436,4.24463 v -16.34633 h 2.07715 v 3.22863 l -0.13546,2.77706 0.22578,2.77707 v 7.56357 z m 6.16374,-6.14116 q 1.15146,0 2.05458,-0.51929 0.92569,-0.51929 1.44498,-1.46756 0.54186,-0.97085 0.54186,-2.2352 0,-1.28694 -0.54186,-2.21263 -0.51929,-0.94826 -1.44498,-1.46755 -0.90312,-0.51929 -2.05458,-0.51929 -1.12889,0 -2.05458,0.51929 -0.90312,0.51929 -1.44498,1.46755 -0.51929,0.92569 -0.51929,2.21263 0,1.26435 0.51929,2.2352 0.54186,0.94827 1.44498,1.46756 0.92569,0.51929 2.05458,0.51929 z"
           id="path2097" /><path
           d="m 229.22197,182.57794 q -1.91912,0 -3.38667,-0.79022 -1.44498,-0.79022 -2.25778,-2.16747 -0.79023,-1.37725 -0.79023,-3.16089 0,-1.78365 0.76765,-3.16089 0.79022,-1.37725 2.14489,-2.1449 1.37724,-0.79022 3.09316,-0.79022 1.73849,0 3.07058,0.76765 1.33209,0.76764 2.07716,2.16747 0.76764,1.37724 0.76764,3.22862 0,0.13547 -0.0226,0.31609 0,0.18062 -0.0226,0.33867 h -10.18259 v -1.55787 h 9.0537 l -0.88054,0.54187 q 0.0226,-1.15147 -0.47413,-2.05458 -0.49671,-0.90312 -1.37725,-1.39983 -0.85795,-0.51929 -2.00942,-0.51929 -1.12889,0 -2.00943,0.51929 -0.88053,0.49671 -1.37724,1.4224 -0.49671,0.90312 -0.49671,2.07716 v 0.36125 q 0,1.19662 0.54186,2.14489 0.56445,0.92569 1.55787,1.44498 0.99342,0.51929 2.28036,0.51929 1.06116,0 1.91911,-0.36125 0.88054,-0.36124 1.53529,-1.08373 l 1.19663,1.39982 q -0.8128,0.94827 -2.03201,1.44498 -1.19662,0.49671 -2.68675,0.49671 z"
           id="path2099" /><path
           d="m 237.71121,182.44247 v -11.96623 h 2.07716 v 3.2512 l -0.2032,-0.8128 q 0.49671,-1.24178 1.67075,-1.89653 1.17405,-0.65476 2.88996,-0.65476 v 2.09974 q -0.13546,-0.0226 -0.27093,-0.0226 -0.11289,0 -0.22578,0 -1.73849,0 -2.75449,1.03858 -1.016,1.03858 -1.016,3.00284 v 5.96054 z"
           id="path2101" /></g></g><text
       xml:space="preserve"
       style="font-weight:500;font-size:19.7556px;font-family:Montserrat;-inkscape-font-specification:'Montserrat Medium';text-align:end;text-anchor:end;fill:url(#meshgradient8194);fill-opacity:1;stroke:#ffffff;stroke-width:0;stroke-linejoin:round;stroke-miterlimit:5.1;paint-order:markers fill stroke"
       x="126.99997"
       y="151.52858"
       id="text7769"
       transform="scale(0.96084066,1.0407553)"><tspan
         sodipodi:role="line"
         id="tspan7767"
         x="126.99997"
         y="151.52858"
         style="font-size:19.7556px;text-align:center;text-anchor:middle;fill:#1a1a1a;fill-opacity:1;stroke-width:0">We Bring Safe, Fast </tspan><tspan
         sodipodi:role="line"
         x="126.99996"
         y="176.22308"
         style="font-size:19.7556px;text-align:center;text-anchor:middle;fill:#1a1a1a;fill-opacity:1;stroke-width:0"
         id="tspan7873">and Affordable On-Device AI </tspan><tspan
         sodipodi:role="line"
         x="126.99997"
         y="200.91757"
         style="font-size:19.7556px;text-align:center;text-anchor:middle;fill:#1a1a1a;fill-opacity:1;stroke-width:0"
         id="tspan7875">Solutions in your reach</tspan></text></g><g
     inkscape:groupmode="layer"
     id="layer2"
     inkscape:label="Layer 2" /><script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></svg>
